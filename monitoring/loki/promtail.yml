# Promtail Configuration for Academia Novit Challenge
server:
  http_listen_port: 9080
  grpc_listen_port: 0

positions:
  filename: /positions/positions.yaml

clients:
  - url: http://loki:3100/loki/api/v1/push

scrape_configs:
  # System logs
  - job_name: system-logs
    static_configs:
      - targets:
          - localhost
        labels:
          job: system-logs
          host: academia-novit
          __path__: /var/log/*.log

  # Auth logs (important for security monitoring)
  - job_name: auth-logs
    static_configs:
      - targets:
          - localhost
        labels:
          job: auth-logs
          host: academia-novit
          __path__: /var/log/auth.log

  # Nginx logs (API access and errors)
  - job_name: nginx-access
    static_configs:
      - targets:
          - localhost
        labels:
          job: nginx-access
          host: academia-novit
          __path__: /var/log/nginx/api_access.log
    pipeline_stages:
      - regex:
          expression: '^(?P<remote_addr>\S+) - - \[(?P<timestamp>[^\]]+)\] "(?P<method>\S+)\s(?P<request_uri>\S+)\s\S+" (?P<status>\d{3}) (?P<bytes_sent>\d+) "[^"]*" "[^"]*" rt=(?P<request_time>\S+)'
      - labels:
          remote_addr:
          method:
          status:
          path:
          bytes_sent:
      - metrics:
          request_duration_seconds:
            type: Histogram
            description: "Request duration in seconds."
            source: request_time
            config:
              buckets: [0.1, 0.5, 1, 2.5, 5]

  - job_name: nginx-error
    static_configs:
      - targets:
          - localhost
        labels:
          job: nginx-error
          host: academia-novit
          __path__: /var/log/nginx/api_error.log

  # Docker container logs
  - job_name: docker-containers
    static_configs:
      - targets:
          - localhost
        labels:
          job: docker-containers
          host: academia-novit
          __path__: /var/lib/docker/containers/*/*.log
    pipeline_stages:
      - json:
          expressions:
            output: log
            stream: stream
            time: time
      - labels:
          stream:
      - timestamp:
          source: time
          format: RFC3339Nano
      - output:
          source: output

  # Json Exporter Logs
  - job_name: json-exporter-logs
    docker_sd_configs:
      - host: unix:///var/run/docker.sock
        refresh_interval: 5s
    relabel_configs:
      - source_labels: ["__meta_docker_container_name"]
        regex: "/json-exporter"
        target_label: job
        replacement: "json-exporter"
    pipeline_stages:
      - logfmt:
          mapping:
            level: level
            msg: msg

  # API Application logs (when containerized)
  - job_name: api-application
    docker_sd_configs:
      - host: unix:///var/run/docker.sock
        refresh_interval: 5s
    relabel_configs:
      - source_labels: ["__meta_docker_container_name"]
        regex: "/?(api-.*|.*api.*)"
        target_label: job
        replacement: "api-application"
      - source_labels: ["__meta_docker_container_name"]
        target_label: container_name
    pipeline_stages:
      - json:
          expressions:
            output: log
            stream: stream
            time: time
      - json:
          source: output
          expressions:
            timestamp: timestamp
            level: level
            message: message
            method: method
            url: url
            statusCode: statusCode
            responseTime: responseTime
            userId: userId
            ip: ip
      - labels:
          level:
          method:
          statusCode:
          container_name:
      - timestamp:
          source: timestamp
          format: RFC3339
